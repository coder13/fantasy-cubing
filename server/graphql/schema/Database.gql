type User {
  id: Int!
  name: String!
  email: String!
  team: Team
}

type Team {
  id: Int!
  userId: Int!
  name: String!
  picks: [Pick!]
}

type Pick {
  id: Int!
  slot: Int!
  teamId: Int!
  week: Int!
  year: Int!
  wcaId: String!
  eventId: String!
  points: Int
}

type Competition {
  id: String!
  name: String
  countryId: String
  startDate: String
  endDate: String

  wcaLiveId: Int

  results(eventId: String, personId: String): [Result!]
}

type Person {
  id: String!
  wcaUserId: Int
  name: String
  countryId: String
  gender: String
  avatar: String

  results(weekYear: WeekYear, eventId: String, competitionId: String): [Result!]
}

type Result {
  person: Person!
  competition: Competition!
  eventId: String!
  roundTypeId: String!
  formatId: String!
  pos: Int
  best: Int!
  average: Int!
  regionalSingleRecord: String
  regionalAverageRecord: String
  personCountryId: String

  date: String!
  week: Int!
  year: Int!
  points: Int
}

input WeekYear {
  week: Int!
  year: Int!
}
